#!/usr/bin/env node

'use strict';

const fs = require('fs-promise')
const path = require('path')
const marked = require('marked')

const GLOSSARY_FOLDER = path.join(process.cwd(), '_glossary')
const DESTINATION_FILE = process.argv[2] || 'data.json'

const getMarkdown = (content) =>
  content.match(/^.*?(?:---)(?:[\s\S]*?)(?:---)([\s\S]*)$/)[1] || ''

const parseFile = (file, content) => ({
  name: content.match(/^title:\s*(.+)$/m)[1],
  description: content.match(/^excerpt:\s*(.+)$/m)[1],
  markdown: getMarkdown(content),
  html: marked(getMarkdown(content)),
  url: `https://github.com/HugoGiraudel/SJSJ/blob/master/_glossary/${file}`
})

const readFile = (file) =>
  fs.readFile(path.join(GLOSSARY_FOLDER, file), 'utf8')

const collect = (file) =>
  readFile(file).then(parseFile.bind(null, file))

const readEntries = () =>
  fs.readdir(GLOSSARY_FOLDER)

const processFiles = (files) =>
  Promise.all(files.map(collect))

const buildJSON = (entries) =>
  JSON.stringify(entries, null, 2) 

const writeJSON = (data) =>
  fs.writeFile(DESTINATION_FILE, data)

const logEnd = () =>
  console.log(`${DESTINATION_FILE} successfully generated.`)

readEntries()
  .then(processFiles)
  .then(buildJSON)
  .then(writeJSON)
  .then(logEnd)
  .catch(console.log)
